{
  "_args": [
    [
      {
        "raw": "phplint@*",
        "scope": null,
        "escapedName": "phplint",
        "name": "phplint",
        "rawSpec": "*",
        "spec": "*",
        "type": "range"
      },
      "/home/pradeep/workspace/examples/react"
    ]
  ],
  "_from": "phplint@*",
  "_id": "phplint@2.0.0",
  "_inCache": true,
  "_location": "/phplint",
  "_nodeVersion": "9.3.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/phplint-2.0.0.tgz_1514992638756_0.20277592726051807"
  },
  "_npmUser": {
    "name": "wayneashleyberry",
    "email": "wayneashleyberry@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "phplint@*",
    "scope": null,
    "escapedName": "phplint",
    "name": "phplint",
    "rawSpec": "*",
    "spec": "*",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/phplint/-/phplint-2.0.0.tgz",
  "_shasum": "58bd85207fce48a219a59156dea0e517e95379e3",
  "_shrinkwrap": null,
  "_spec": "phplint@*",
  "_where": "/home/pradeep/workspace/examples/react",
  "author": {
    "name": "Wayne Ashley Berry",
    "email": "wayneashleyberry@gmail.com",
    "url": "https://github.com/wayneashleyberry"
  },
  "bin": {
    "phplint": "./cli.js"
  },
  "bugs": {
    "url": "https://github.com/wayneashleyberry/phplint/issues"
  },
  "dependencies": {
    "async": "^2.6.0",
    "cache-swap": "^0.3.0",
    "globby": "^7.1.1"
  },
  "description": "phplint is a wrapper around the native php linter that allows for parallel linting and integration with build systems like Grunt, Gulp and more!",
  "devDependencies": {
    "bin-check": "^4.1.0",
    "chai": "^4.1.2",
    "mocha": "^4.1.0",
    "prettier": "^1.9.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-TF72+gYjba6FPXPkYfoAVTIhGtFDPjUJETVVvGLpx1QR0NPKiuyowVrMmZ5TlvnXvk4emaolfHP3GaA2iIcK1g==",
    "shasum": "58bd85207fce48a219a59156dea0e517e95379e3",
    "tarball": "https://registry.npmjs.org/phplint/-/phplint-2.0.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "fa2060985212719d9ba6c17ed19fc8f2b963ef5f",
  "homepage": "https://github.com/wayneashleyberry/phplint#readme",
  "keywords": [
    "php",
    "lint",
    "phplint",
    "gulpplugin",
    "gulpfriendly",
    "gruntplugin",
    "gruntfriendly"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "wayneashleyberry",
      "email": "wayneashleyberry@gmail.com"
    },
    {
      "name": "next",
      "email": "next@wearenext.co.za"
    }
  ],
  "name": "phplint",
  "optionalDependencies": {},
  "readme": "## phplint\n\n> phplint is a node wrapper around the native php linter that allows for\n> parallel linting and integration with build systems like\n> [Grunt](http://gruntjs.com/), [Gulp](http://gulpjs.com/) and more.\n\n[![npm](http://img.shields.io/npm/v/phplint.svg?style=flat)](https://www.npmjs.com/package/phplint)\n[![Build Status](https://travis-ci.org/wayneashleyberry/phplint.svg?branch=master)](https://travis-ci.org/wayneashleyberry/phplint)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\n### Usage\n\n#### CLI\n\n```sh\n$ npm i -g phplint\n$ phplint '**/*.php'\n```\n\nPaths and filenames are parsed using\n[globby](https://github.com/sindresorhus/globby), so the following would work\nas well:\n\n```sh\n$ phplint '**/*.php' '!vendor/**'\n```\n\n#### Node\n\n```js\nvar phplint = require(\"phplint\").lint;\n\nphplint([\"src/**/*.php\"], function(err, stdout, stderr) {\n  if (err) throw new Error(err);\n\n  process.stdout.write(stdout);\n  process.stderr.write(stderr);\n\n  // success!\n});\n```\n\n#### NPM\n\n```json\n{\n  \"scripts\": {\n    \"pretest\": \"phplint 'src/**/*.php'\"\n  },\n  \"devDependencies\": {\n    \"phplint\": \"~1.0.0\"\n  }\n}\n```\n\n```sh\n$ npm test\n```\n\n#### Grunt\n\n##### Configure cache directories\n\nThis module uses the `cache-swap` module to cache already linted files.\nYou can configure the cache directories via the `cacheDirName` and the `tmpDir` options.\nBoth options will be passed to the CacheSwap instance when created.\n\n```js\nmodule.exports = function(grunt) {\n  require(\"phplint\").gruntPlugin(grunt);\n\n  grunt.initConfig({\n    phplint: {\n      options: {\n        limit: 10,\n        phpCmd: \"/home/scripts/php\", // Defaults to php\n        stdout: true,\n        stderr: true,\n        useCache: true, // Defaults to false\n        tmpDir: \"/custom/root/folder\", // Defaults to os.tmpDir()\n        cacheDirName: \"custom/subfolder\" // Defaults to php-lint\n      },\n      files: \"src/**/*.php\"\n    }\n  });\n\n  grunt.registerTask(\"test\", [\"phplint\"]);\n};\n```\n\n```sh\n$ grunt test\n```\n\n#### Gulp\n\nThe same options that can be used in Grunt can be used in Gulp too.\n\n```js\nvar gulp = require(\"gulp\");\nvar phplint = require(\"phplint\").lint;\n\ngulp.task(\"phplint\", function(cb) {\n  phplint([\"src/**/*.php\"], { limit: 10 }, function(err, stdout, stderr) {\n    if (err) {\n      cb(err);\n      process.exit(1);\n    }\n    cb();\n  });\n});\n\ngulp.task(\"test\", [\"phplint\"]);\n```\n\n```sh\n$ gulp test\n```\n\n### Related\n\n* [phpl](https://github.com/wayneashleyberry/phpl)\n\n### License\n\n[MIT](http://opensource.org/licenses/MIT) Â© [Wayne Ashley Berry](https://wayne.cloud)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/wayneashleyberry/phplint.git"
  },
  "scripts": {
    "test": "mocha ./test/test.js"
  },
  "version": "2.0.0"
}
